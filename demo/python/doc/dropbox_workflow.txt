Help on module dropbox_workflow:

NAME
    dropbox_workflow - dropbox_workflow.py: methods to implement the Dropbox No-Redirect and Redirect workflows

FILE
    /Users/nick/Documents/Author/Conferences/2014-06-SPA/OAuth/demo/python/dropbox_workflow.py

DESCRIPTION
    Dependencies:
        python 2.7
        dropbox - Python Dropbox API (https://www.dropbox.com/developers/datastore/sdks/python)
    
    Classes:
        DropboxStatus: simple class for returning Dropbox status
    
    Global variables:
        logger: used to log error, info and debug messages
            example usage: logger = CC.logger; logger('message')
    
    Methods:
        no_redirect_client_start(): implements the start() portion of the Dropbox OAuth no_redirect flow
        no_redirect_client_finish_and_save(): implements the finish() portion of the Dropbox OAuth no_redirect flow
        redirect_client_start(): implements the start() portion of the Dropbox OAuth redirect flow
        httpd_handle_finish_and_save(): httpd handler which implements the finish() portion of the Dropbox OAuth server (redirect) flow

CLASSES
    __builtin__.object
        DropboxStatus
    
    class DropboxStatus(__builtin__.object)
     |  simple class for returning Dropbox status
     |  
     |  Methods defined here:
     |  
     |  __init__(self, http_status, message='', redirect_url='')
     |  
     |  ----------------------------------------------------------------------
     |  Data descriptors defined here:
     |  
     |  __dict__
     |      dictionary for instance variables (if defined)
     |  
     |  __weakref__
     |      list of weak references to the object (if defined)

FUNCTIONS
    httpd_handle_finish_and_save(request_path, query_dict)
        This httpd handler implements the finish() portion of the Dropbox OAuth server (redirect) flow
        
        The client has taken the user to the URL returned by start() and they have authorised with Dropbox.
        The Dropbox website has generated an authorisation code which is included in the redirect URL.
        
        The function uses the client object created in noRedirectClientStart() to perform the following steps:
        - Call httpd_services.load_httpd_session() to load the session data saved by redirect_client_start().
        - Call dropbox.client.DropboxOAuth2Flow.finish() to finish the Oauth workflow.
        - Call AccessData.save() to save the access token returned by finish().
        - Call DropboxTools.createSampleFiles() to create some sample files in the Dropbox app folder.
    
    no_redirect_client_finish_and_save(security_code)
        This function implements the finish() portion of the Dropbox OAuth no_redirect flow
        
        The client has taken the user to the URL returned by start() and they have authorised with Dropbox.
        The Dropbox website has generated an authorisation code which the user has copied to their clipboard
        and pasted into the client when prompted.
        
        This function uses the client object created in no_redirect_client_start() to perform the following steps:
        - Call dropbox.client.DropboxOAuth2FlowNoRedirect.finish() to finish the Oauth workflow.
        - Call AccessData.save() to save the access token returned by finish().
        - Call DropboxTools.createSampleFiles() to create some sample files in the Dropbox app folder
    
    no_redirect_client_start()
        This function implements the start() portion of the Dropbox OAuth no_redirect flow
        
        It performs the following steps:
        - Create a dropbox.client.DropboxOAuth2FlowNoRedirect object.
        - Call DropboxOAuth2FlowNoRedirect.start() to start the Oauth workflow.
        - Return the URL generated by start() in a DropboxStatus object.
        
        The client will then take the user to the URL returned by start() so they can authorise with Dropbox.
        The Dropbox website will generate an authorisation code which the user must copy to their clipboard
        and paste into the client when prompted.
    
    redirect_client_start()
        This function implements the start() portion of the Dropbox OAuth redirect flow
        
        It performs the following steps:
        - Create a dropbox.client.DropboxOAuth2Flow object.
        - Call DropboxOAuth2Flow.start() to start the Oauth workflow.
        - call httpd_services.save_httpd_session() to save the session for use by the HTTP server.
        - Return the URL generated by DropboxOAuth2Flow.start() in a DropboxStatus object.
        
        The client will then take the user to the URL returned by start() so they can authorise with Dropbox.
        The Dropbox website will generate an authorisation code which will be used by finish() to generate the access token.

DATA
    ACCOUNT_INFO_FILE = '/account_info.python.txt'
    REVIEW_DIRECTORY = '/oauth_session_python'
    REVIEW_FILE = '/oauth_session_python/oauth_session_review.python.md'
    logger = <logging.Logger object>


