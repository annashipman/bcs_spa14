Help on module oauth_client:

NAME
    oauth_client - oauth_client.py: Dropbox Python OAuth API demo client

FILE
    /Users/nick/Documents/Author/Conferences/2014-06-SPA/OAuth/demo/python/oauth_client.py

DESCRIPTION
    This is the script which runs the Oauth demo client.
    It checks whether the access token file exists, and presents the user with a menu of relevant options.
    
    If the client has previously been authorised with Dropbox (ie the Dropbox token file exists),
    the options allow the user to manipulate files in the Dropbox app directory using Dropbox calls
    (not using filesystem I/O).
    
    If the client has not yet been authorised with Dropbox (ie the Dropbox token file does not exist),
    the options allow the user to run either the no-redirect or redirect workflows.
    
    
    Global variables:
        logger: used to log error, info and debug messages
            example usage: logger = CO.logger; logger('message')
        dropbox_client: a dropbox.client.DropboxClient() which can be manipulated by the user
    
    Workflow Methods:
        oauth_authorise_no_redirect(): run noredirect authorisation workflow (requires auth code to be entered)
        oauth_authorise_redirect(): start redirect authorisation workflow (uses HTTP web server to simulate URL schema)
    
    Other Methods:
        oauth_access_token_file_exists(): print whether the access token file exists
        oauth_print_access_token_file(): print the access token file
        oauth_delete_access_token_file(): delete the access token file
        oauth_help(): display a help message which shows what functions can be called
        oauth_debug(): enable / disable debugging

FUNCTIONS
    oauth_access_token_file_exists()
        print whether the access token file exists
    
    oauth_authorise_no_redirect()
        run noredirect authorisation workflow (requires auth code to be entered)
        
        This consists of the following steps:
        - Delete the access token file if it exists.
        - Start the workflow by calling DropboxWorkflow.no_redirect_client_start().
        - Open a browser window at the URL returned by no_redirect_client_start().
        - Prompt the user to enter the authorisation code displayed by Dropbox in this window.
        - Finish the workflow, save the access token and generate the sample files
          by calling DropboxWork.no_redirect_client_finish_and_save().
        
        @see https://www.dropbox.com/developers/core/docs/python#DropboxOAuth2FlowNoRedirect
    
    oauth_authorise_redirect()
        start redirect authorisation workflow (uses HTTP web server to simulate URL schema)
        
        Start the Oauth no-redirect workflow.
        - This consists of the following steps:
        - Delete the access token file if it exists.
        - Start the workflow by calling DropboxWorkflow.redirect_client_start().
        - Open a browser window at the URL returned by redirect_client_start().
        - Wait for the access token file to be created by the HTTP server
          (which is running the finish step of the workflow).
        
        @see https://www.dropbox.com/developers/core/docs/python#DropboxOAuth2Flow
    
    oauth_debug(enable)
        enable / disable debugging
    
    oauth_delete_access_token_file()
        delete the access token file
    
    oauth_help()
        display a help message which shows what functions can be called
    
    oauth_print_access_token_file()
        print the access token file

DATA
    ACCOUNT_INFO_FILE = '/account_info.python.txt'
    REVIEW_DIRECTORY = '/oauth_session_python'
    REVIEW_FILE = '/oauth_session_python/oauth_session_review.python.md'
    logger = <logging.Logger object>


